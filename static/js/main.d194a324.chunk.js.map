{"version":3,"sources":["components/Panel/Panel.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Panel","title","children","defaultProps","ContactForm","state","name","number","inputGetValue","e","item","currentTarget","setState","value","formHandleSubmit","preventDefault","props","onSubmit","this","onChange","type","pattern","required","React","Component","ContactsList","contacts","map","id","onClick","deleteContact","Filter","onFilterChange","App","filter","addNewContact","contact","uuidv4","some","alert","contId","prevState","getResultOfContacts","toLowerCase","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d194a324.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Panel = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPanel.defaultProps = {\r\n  title: \"\",\r\n  children: [],\r\n};\r\nPanel.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Panel;\r\n","import React from \"react\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  inputGetValue = (e) => {\r\n    const item = e.currentTarget.name;\r\n\r\n    this.setState({ [item]: e.currentTarget.value });\r\n  };\r\n\r\n  formHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formHandleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.inputGetValue}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={this.inputGetValue}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nfunction ContactsList(props) {\r\n  return (\r\n    <ul>\r\n      {props.contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button type=\"button\" onClick={() => props.deleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ onFilterChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" onChange={onFilterChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\nimport Panel from \"./components/Panel/Panel\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.some((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contId),\n    }));\n  };\n  onFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n  getResultOfContacts = () => {\n    const { contacts, filter } = this.state;\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Panel title=\"Phonebook\">\n          <ContactForm onSubmit={this.addNewContact} />\n        </Panel>\n        <Panel title=\"Contacts\">\n          <Filter onFilterChange={this.onFilterChange} />\n          <ContactsList\n            contacts={this.getResultOfContacts()}\n            deleteContact={this.deleteContact}\n          />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}